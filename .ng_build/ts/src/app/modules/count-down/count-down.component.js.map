{"version":3,"sources":["count-down.component.ts"],"names":[],"mappings":"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","file":"count-down.component.js","sourceRoot":"","sourcesContent":["import { Component, OnInit , Input, Output, EventEmitter} from '@angular/core';\nimport { CountDownService, ICountdownOptions, ICountdownData } from '../services/count-down.service';\nexport class CountDownComponent implements OnInit {\nprivate format: string;\nprivate finishTime: number;\nprivate timer: any;\nprivate theme: string;\nprivate countdown: ICountdownData;\nprivate date: string = \" - \";\n   time: number;\n   onStart = new EventEmitter<string>();\n   onComplete = new EventEmitter<string>();\n   object: any;\n\t singleFormat: string;\n   selectedtheme: string = \"default\";\n/**\n * @param {?} _countDownService\n */\nconstructor(private _countDownService: CountDownService) {}\n/**\n * @return {?}\n */\nngOnInit() {\n    this.startCountDown();\n  }\n/**\n * @param {?} data\n * @return {?}\n */\nisFunction(data: any) {\n    return typeof data === \"function\";\n  }\n/**\n * @return {?}\n */\nstartCountDown() {\n    let /** @type {?} */ countdownOptions: ICountdownOptions;\n    countdownOptions = this._countDownService.getdefaultCountDownOptions();\n    this.countdown = {\n      timeInterval: this.time,\n      object:     this.object,\n      format:     this.singleFormat || countdownOptions.format,\n      theme:      this.selectedtheme + '-countdown-timer' || countdownOptions.theme + '-countdown-timer',\n      onStart:    countdownOptions.onStart && this.isFunction(countdownOptions.onStart) ? countdownOptions.onStart : null,\n      onComplete: countdownOptions.onComplete && this.isFunction(countdownOptions.onComplete) ? countdownOptions.onComplete : null\n    };\n    this.onStart.emit(JSON.stringify(this.countdown));\n    if (countdownOptions.onStart && this.isFunction(countdownOptions.onStart)) {\n      countdownOptions.onStart.call(this, this.countdown);\n    }\n    this.finishTime = this.countdown.timeInterval;\n    var /** @type {?} */ that = this;\n    this.timer = setInterval(function() {\n      if (that.finishTime == 0) {\n        if (countdownOptions.onComplete && that.isFunction(countdownOptions.onComplete)) {\n          countdownOptions.onComplete.call(that, that.countdown);\n        }\n        that.onComplete.emit(that.countdown.toString());\n        clearInterval(that.timer);\n      }\n      else {\n        that.finishTime = that.finishTime - 1;\n        that.date = that._countDownService.dhms(that.finishTime, that.countdown.format);\n      }\n    }, 1000)\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'app-count-down',\n  template: `\n    <div [ngClass]=\"countdown.theme\">   <!--countdown.theme -->\n      <span class=\"timer\">{{date}}</span>\n    </div>\n  `,\n  styles: [`\n    .default-countdown-timer{\n      border: 1px solid #ddd;\n      color: #3c763d;\n      background-color: transparent;\n      padding: 10px 15px;\n      margin-bottom: 20px;\n      border-radius: 4px;\n      display: inline-block;\n    }\n    .bootstrap-countdown-timer {\n      color: #3c763d;\n      background-color: #dff0d8;\n      border-color: #d6e9c6;\n      padding: 10px 15px;\n      margin-bottom: 20px;\n      border: 1px solid #d6e9c6;\n      border-radius: 4px;\n      display: inline-block;\n    }\n    .material-countdown-timer{\n      color: #3c763d;\n      background-color: #dff0d8;\n      border-color: #d6e9c6;\n      padding: 10px 15px;\n      margin-bottom: 20px;\n      border: 1px solid transparent;\n      border-radius: 0px;\n      display: inline-block;\n    }\n  `]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: CountDownService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'time': [{ type: Input },],\n'onStart': [{ type: Output },],\n'onComplete': [{ type: Output },],\n'object': [{ type: Input },],\n'singleFormat': [{ type: Input },],\n'selectedtheme': [{ type: Input },],\n};\n}\n\nfunction CountDownComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nCountDownComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCountDownComponent.ctorParameters;\n/** @type {?} */\nCountDownComponent.propDecorators;\n/** @type {?} */\nCountDownComponent.prototype.format;\n/** @type {?} */\nCountDownComponent.prototype.finishTime;\n/** @type {?} */\nCountDownComponent.prototype.timer;\n/** @type {?} */\nCountDownComponent.prototype.theme;\n/** @type {?} */\nCountDownComponent.prototype.countdown;\n/** @type {?} */\nCountDownComponent.prototype.date;\n/** @type {?} */\nCountDownComponent.prototype.time;\n/** @type {?} */\nCountDownComponent.prototype.onStart;\n/** @type {?} */\nCountDownComponent.prototype.onComplete;\n/** @type {?} */\nCountDownComponent.prototype.object;\n/** @type {?} */\nCountDownComponent.prototype.singleFormat;\n/** @type {?} */\nCountDownComponent.prototype.selectedtheme;\n/** @type {?} */\nCountDownComponent.prototype._countDownService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}